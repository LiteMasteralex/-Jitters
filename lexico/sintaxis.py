# -*- coding: utf-8 -*-
"""Sintaxis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N2JVLUzouD2x1pFRuZWeCADg1urK5Brb
"""

import pyparsing
from pyparsing import *

from google.colab import drive
drive.mount('/content/drive')

#Predefinir los terminos que se usan en recursion
Variables_1 = Forward()
Lista = Forward()

#Definiciones Simples de Palabras claves
Id = Word(alphas)
Tipo = Keyword('int') | Keyword('float') | Keyword('char')
Num = Word(nums)

#PROGRAMA
Estatuto = Keyword('Asignacion') | Empty()
Funciones = Keyword('funciones') | Empty()

Identificador = Id + '[' + Num + ']' + '[' + Num + ']' | Id + '[' + Num + ']' | Id 

Lista <<= ',' + Identificador + Lista | Empty()
Lista_Ids = Identificador + Lista

Variables_1 <<= Tipo + ':' + Lista_Ids + ';' + Variables_1 | Empty()
Variables = Keyword('var') + Tipo + ':' + Lista_Ids + ';' + Variables_1 | Empty()

Programa = Keyword('Programa') + Id + ';' + Variables + Funciones + Keyword('principal') + '()' + '{' + Estatuto + '}'

#Predefinir los terminos que se usan en recursion
Escritura_1 = Forward()
Escritura_2 = Forward()
Lectura_1 = Forward()

#FUNCION_VOID 


#RETORNO
Retorno = Keyword('regresa') + '(' + Expresiones + ')'

#LECTURA
Lectura_1 <<= ',' + Identificadores + Lectura_1 | Empty()
Lectura = Keyword('lee') + '(' + Identificadores + Lectura_1 + ')' + ';'

#ESCRITURA
Escritura_1 <<= '"' + String + '"' + Escritura_2 | Expresiones + Escritura_2
Escritura_2 <<= ',' + Escritura_1 | Empty()
Escritura = Keyword('escribe') + '(' + Escritura_1 + ')'

#DECISION
Decision_1 = Keyword('sino') | Empty()
Decision = Keyword('si') + '(' + Operacion_Cond + ')' + Keyword('entonces') + '{' + Estatuto + ';' + '}'

#REPETICION
Repeticion_Cond = Keyword('mientras') + '(' + Operacion_Cond + ')' + Keyword('haz')  + '{' + Estatuto +  ';' + '}'  
Repeticion_No_Cond = Keyword('desde') + Asignacion + Keyword('hasta') + Identificadores + Keyword('hacer') + '{' + Estatuto +  ';' + '}'
Repeticion = Repeticion_Cond | Repeticion_No_Cond

#Lee el archivo
print("Ingrese el nombre del archivo a leer")
fileName = input()
with open(fileName, 'r') as file:
  data = file.read().replace('\n', '')

#Pruebalo con la gramatica
try:
  Programa.parseString(data)
  print("Se compilo exitosamente")
except pyparsing.ParseException as pe:
  print(pe.explain(pe))